1. 什么是Scala？
	Scala是一门面向对象和函数式编程的语言，scala是运行在Jvm基础之上的，可以用于JS开发，搭建高性能的系统
	作者：马丁 奥德斯基   美
	发源地：联邦理工学院洛桑 2003年推行  2004年正式发布 2009年的时候发布2.X以上版本
	
	特点：
		1. 优雅：体现在API编写上面，可以使用简洁的代码实现更多的功能
		2. 速度快：Scala语言表达能力强，一行代码抵得上java多行，scala运行速度远远要比java语言速度快
		3. 能融合到Hadoop生态：Hadoop现在是一个生态体系，Scala语言可以融入到Hadoop的生态栈，因为可以运行在JVM之上，也是面向对象的编程思想，编写代码能力比较Java还要强。

2. 安装Scala的环境
	配置环境变量 找到msi安装包

3. 配置IDEA和Maven的环境
	找到settings配置Maven
	找到标识本地安装Scala插件

4. Scala基础
	1. 解释器使用
		REPL：Read（取值）Evaluation（求值）Print（打印）Loop（循环）
		通过解释器进行编译代码（字节码），最后交给JVM来执行
	
	2. 在解释器中，如果我们不给定具体的返回值变量和返回值类型的话，会自动默认推断返回值类型，和返回一个内置变量名
	自动补全功能：Tab键
	3. 声明变量
	  val：如果使用val声明的变量，那么属于不可变的变量，不允许重新赋值，但是可以取值。
	  var：如果使用var声明的变量，代表可变的变量，也就说它可以重新赋值，声明方式和val一样，但是它可以将变量值改变
	  
	  官网介绍：在程序使用过中，通常建议你使用val声明的变量，因为后期咱们会对spark进行开发，而spark开发处理的数据是大量数据，会需要进行网络传输，传输过程中会进行序列化操作，所以为了保证传输的安全性，推荐使用val声明。
	  
	  Any是Scala中的顶级父类，相当于Java中的Object类型
	  也可以同时声明多个变量
	  
	4. 数据类型和操作符
	
	  基本数据类型：Byte、Short、Int、Long、Float、Double、Char、Boolean
	    感觉和java一样，但是注意，在Scala中没有包装类
		Scala虽然没有包装类，但是Scala内部会有一个隐式转换的概念，通过隐式转换的概念实现类型的转换，实现包装类。
		to方法在Int类型中不存在的，它是通过RichInt实现转换的
	  操作符：和Java基本一致，包括 + - * / % 等等。。。
	  
	  在Scala语言中没有++  -- 这一说，换成了+=和-=的操作

	5. Apply函数(简单演示) 重点-> 后面还要讲
		Scala语言中的一个特殊的函数，也可以叫做初始化函数。
		只限于对象当中，使用'对象名()'的形式，其实就是'对象名.apply()'的一种缩写，也可以直接使用'类名()'，如果我们创建的是类，那么需要'new 类名()'
	
	6. if表达式
	  
	  在scala中也有if判断语句，和咱们的Java几乎是一样的，但是它写起来很随意的。
	  当我们的if条件语句出现返回值不同类型的时候，它会取里面公共的类型，一般都是Any。
	  如果我们else当中没有值存在，那么代表无返回值的意思，用Unit表示。
	  
	7. 语句终结符、块表达式
	  默认情况下，scala是不需要语句终结符的，默认将每一行作为一个语句（Java中需要用;分号来结束这个语句）
	   块表达式：其实就是指数据或者元素被{}包起来的部分叫做块表达式。
	   
	 8. 输入和输出
	 输出：print()、println()、printf(格式化输出)
	 输入：readLine()
	 
	 9. 循环 （重点）
	   while 和java一样
	   for 在scala语言中，没有这种概念，它将for循环进行改进了 
	   跳出循环方式
			1. 定义外部变量跳出循环（推荐使用） 如果使用for循环，需要使用if守卫
			2. 通过break来跳出循环（看情况使用）
			3. 通过return（不建议使用）
		to和until的区别：to包头包尾，until包头不包尾
	   foreach
	 10. 高级for循环（重点）
		多重for循环实现一个九九乘法表；
		for(i<-1 to 9;j <- 1 to 9){
		if(j==9){
		println(i * j)
		}else{
		print(i*j+ " ")
		}
		}
	   if守卫 取偶
	   for循环推导式，构建集合
	   foreach输出方式
	   第一种：foreach(println)
	   第二种：foreach(x=>println(x))
	   
	 11. 定义函数和声明方法（重点）
		定义函数：
		val m1 = (参数列表)=>{函数体}
		(参数列表)=>{函数体}
		匿名函数和非匿名函数
		声明方法：
		声明方法的关键字 方法名 方法参数 返回值类型 方法体
		def f1(x:Int):Int ={x*x}
		方法转换成函数 def1 _  用下划线的方式转换成函数
		
		斐波那契递归  9+8;8+7+7+6;7+6+6+5+6+5+5;(了解)
		传入10
		def fab(n:Int):Int={
		if(n<=1) 1
		else fab(n-1) + fab(n-2)
		}
		
	 12. lazy 关键字（了解）
		在Scala中，它提供了lazy关键字的特性，这个特性就是懒加载的意思，也就是说，当我们内部没有引用这个变量的时候，是不会对其进行加载的，这种方式对于读取大的本地文件，很有用，并且Spark中的源码大量使用了lazy关键字。
		
		如果使用lazy的关键字，那么就起到了懒加载的特性，那么将不会真正读取数据或者文件，这样做的话，会节省IO消耗，并且提高效率
	13. 数组（重点）
		Array
		定长数组：import scala.collection.immutable._ （默认导入的）
		ArrayBuffer
		变长数组：import scala.collection.mutable._（手动导入的）
		
		insert 添加元素 添加至当前下标的前面
		remove 删除元素 可以删除指定位置的元素
		数组转换 可变转换不可变 同理  toArray  toBuffer
		遍历数组： for(i <- b)println(i) 常用方式
	   
	   